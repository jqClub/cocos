{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["log","console","bind","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","background","onLoad","that","y","height","getLocal","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","groundY","Math","random","jumpHeight","maxX","width","v2","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAMC,QAAQD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAV;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ,MAFD,CAES;AAFT,SADJ;AAKR;AACAC,yBAAiB,CANT;AAORC,yBAAiB,CAPT;AAQR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SATA;AAaR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAdA;AAkBR;AACAE,oBAAY;AACRR,qBAAS,IADD;AAERC,kBAAMP,GAAGY;AAFD;AAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCQ,KAHP;;AA2CL;;AAEAG,UA7CK,oBA6CK;AACN,YAAIC,OAAO,IAAX;AACA;AACA,YAAIC,IAAID,KAAKL,MAAL,CAAYM,CAApB;AACA,YAAIC,SAASF,KAAKL,MAAL,CAAYO,MAAzB;AACA,YAAIC,WAAWF,IAAIC,SAAS,CAA5B;AACArB,YAAI,MAAJ,EAAYoB,CAAZ,EAAeC,MAAf,EAAuBC,QAAvB;AACA;;AAEA;AACA;;AAEA;AACA,aAAKC,YAAL;;AAEA;AACA;AACA;AACH,KA/DI;;AAgELA,kBAAc,wBAAW;AACrB,YAAIJ,OAAO,IAAX;AACA;AACA,YAAIK,UAAUrB,GAAGsB,WAAH,CAAe,KAAKjB,UAApB,CAAd;AACA;AACA,aAAKkB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoBT,KAAKU,kBAAL,EAApB;;AAEA;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACH,KA5EI;AA6ELF,wBAAoB,8BAAY;AAC5B,YAAIG,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKC,OAAL,GAAeC,KAAKC,MAAL,KAAgB,KAAKpB,MAAL,CAAYc,YAAZ,CAAyB,QAAzB,EAAmCO,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKZ,IAAL,CAAUa,KAAV,GAAgB,CAA3B;AACAP,gBAAQ,CAACG,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BE,IAApC;AACA;AACA,eAAOnC,GAAGqC,EAAH,CAAMR,KAAN,EAAaC,KAAb,CAAP;AACH,KAtFI;AAuFLQ,SAvFK,mBAuFI,CAER;AAzFI;;AA2FL;AA3FJ","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar log = console.log.bind(console)\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab, // 引用预制节点\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // background 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        background: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        var that = this\r\n        // 获取地平面的坐标(锚点默认在节点的中心)\r\n        var y = that.ground.y\r\n        var height = that.ground.height\r\n        var getLocal = y + height / 2\r\n        log(888888, y, height, getLocal)\r\n        // log(that.node.children)   //这里可以获取所有的节点\r\n\r\n        // // var jumpHeight = that.player.jumpHeight\r\n        // var jumpHeight = this.player.getComponent('Player').jumpHeight\r\n        \r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n\r\n        // // 19.1.8如何在星星组件上，获取主角的坐标\r\n        // // 在主角组件上暂存 Game 对象的引用\r\n        // that.player.getComponent('Player').game = this;\r\n    },\r\n    spawnNewStar: function() {\r\n        var that = this\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(that.getNewStarPosition());\r\n\r\n        // 19.1.8如何在星星组件上，获取主角的坐标\r\n        // 在星星组件上暂存 Game 对象的引用\r\n        newStar.getComponent('Star').game = this;\r\n    },\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}