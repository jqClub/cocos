{"version":3,"sources":["Game.js"],"names":["log","console","bind","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","background","scoreDisplay","Label","onLoad","that","timer","starDuration","y","height","groundY","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","addScore","string","start","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAMC,QAAQD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAV;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ,MAFD,CAES;AAFT,SADJ;AAKR;AACAC,yBAAiB,CANT;AAORC,yBAAiB,CAPT;AAQR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SATA;AAaR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAdA;AAkBR;AACAE,oBAAY;AACRR,qBAAS,IADD;AAERC,kBAAMP,GAAGY;AAFD,SAnBJ;;AAwBP;AACDG,sBAAc;AACVT,qBAAS,IADC;AAEVC,kBAAMP,GAAGgB,KAFC,CAEM;AAFN;AAId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CQ,KAHP;;AAiDL;;AAEAC,UAnDK,oBAmDK;AACN,YAAIC,OAAO,IAAX;AACA;AACAA,aAAKC,KAAL,GAAa,CAAb;AACAD,aAAKE,YAAL,GAAqB,CAArB,CAJM,CAIiB;;AAEvB;AACA,YAAIC,IAAIH,KAAKP,MAAL,CAAYU,CAApB;AACA,YAAIC,SAASJ,KAAKP,MAAL,CAAYW,MAAzB;AACAJ,aAAKK,OAAL,GAAeF,IAAIC,SAAS,CAA5B;AACAzB,YAAI,MAAJ,EAAYwB,CAAZ,EAAeC,MAAf,EAAuBJ,KAAKK,OAA5B;AACA;;AAEA;AACA;;AAEA;AACA,aAAKC,YAAL;;AAEA;AACA,aAAKC,KAAL,GAAa,CAAb;;AAEA;AACA;AACA;AACH,KA5EI;;AA6ELD,kBAAc,wBAAW;AACrB,YAAIN,OAAO,IAAX;AACA;AACA,YAAIQ,UAAU1B,GAAG2B,WAAH,CAAe,KAAKtB,UAApB,CAAd;AACA;AACA,aAAKuB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoBZ,KAAKa,kBAAL,EAApB;;AAEA;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAGA;AACA,aAAKb,YAAL,GAAoB,KAAKV,eAAL,GAAuBwB,KAAKC,MAAL,MAAiB,KAAK1B,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAKS,KAAL,GAAa,CAAb;AACH,KA9FI;AA+FLY,wBAAoB,8BAAY;AAC5B,YAAIK,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAeW,KAAKC,MAAL,KAAgB,KAAKtB,MAAL,CAAYmB,YAAZ,CAAyB,QAAzB,EAAmCM,UAAlE,GAA+E,EAA3F;AACA;AACA,YAAIC,OAAO,KAAKX,IAAL,CAAUY,KAAV,GAAgB,CAA3B;AACAJ,gBAAQ,CAACF,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BI,IAApC;AACA;AACA,eAAOvC,GAAGyC,EAAH,CAAML,KAAN,EAAaC,KAAb,CAAP;AACH,KAxGI;AAyGLK,cAAU,oBAAW;AACjB,YAAIxB,OAAO,IAAX;AACAA,aAAKO,KAAL,IAAe,CAAf;AACAP,aAAKH,YAAL,CAAkB4B,MAAlB,GAA2B,YAAYzB,KAAKO,KAA5C;AACH,KA7GI;AA8GLmB,SA9GK,mBA8GI,CAAE,CA9GN;AAgHLC,UAhHK,kBAgHGC,EAhHH,EAgHO;AACR,YAAI5B,OAAO,IAAX;AACA;AACA;AACA,YAAI,KAAKC,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAK2B,QAAL;AACA;AACH;AACD,aAAK5B,KAAL,IAAc2B,EAAd;AACH,KAzHI;;AA0HLC,cAAU,oBAAY;AAClB,aAAK5B,KAAL,GAAa,CAAb;AACA,aAAKN,MAAL,CAAYmC,cAAZ,GAFkB,CAEY;AAC9B;AACAhD,WAAGiD,QAAH,CAAYC,SAAZ,CAAsB,UAAtB;AACH;AA/HI,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar log = console.log.bind(console)\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab, // 引用预制节点\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // background 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        background: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n         // 得分 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label  //*这里的类型换成了Label */\r\n        },\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        var that = this\r\n        // 初始化计时器\r\n        that.timer = 0\r\n        that.starDuration  = 0 //设置随机消失的时间\r\n\r\n        // 获取地平面的坐标(锚点默认在节点的中心)\r\n        var y = that.ground.y\r\n        var height = that.ground.height\r\n        that.groundY = y + height / 2\r\n        log(888888, y, height, that.groundY)\r\n        // log(that.node.children)   //这里可以获取所有的节点\r\n\r\n        // // var jumpHeight = that.player.jumpHeight\r\n        // var jumpHeight = this.player.getComponent('Player').jumpHeight\r\n        \r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n\r\n        // 初始化计分\r\n        this.score = 0;\r\n\r\n        // // 19.1.8如何在星星组件上，获取主角的坐标\r\n        // // 在主角组件上暂存 Game 对象的引用\r\n        // that.player.getComponent('Player').game = this;\r\n    },\r\n    spawnNewStar: function() {\r\n        var that = this\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(that.getNewStarPosition());\r\n\r\n        // 19.1.8如何在星星组件上，获取主角的坐标\r\n        // 在星星组件上暂存 Game 对象的引用\r\n        newStar.getComponent('Star').game = this;\r\n\r\n\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    addScore: function() {\r\n        var that = this\r\n        that.score  += 1\r\n        that.scoreDisplay.string = 'score: ' + that.score\r\n    },\r\n    start () {},\r\n\r\n    update (dt) {\r\n        var that = this\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        this.timer = 0\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        // 切换到结束游戏的场景\r\n        cc.director.loadScene(\"gameOver\")\r\n    }\r\n});\r\n"]}