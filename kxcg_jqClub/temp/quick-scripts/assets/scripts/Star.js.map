{"version":3,"sources":["Star.js"],"names":["log","console","bind","cc","Class","extends","Component","properties","pickRadius","start","that","getDist","playerLocal","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","addScore","destroy","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAMC,QAAQD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAV;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBQ,KAHP;AAuBL;;AAEA;;AAEA;;AAEAC,SA7BK,mBA6BI;AACL,YAAIC,OAAO,IAAX;AAGH,KAjCI;;AAkCLC,aAAS,mBAAW;AAChB,YAAID,OAAO,IAAX;AACA;AACA,YAAIE,cAAcF,KAAKG,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAlB;AACA;AACA;AACA,YAAIC,OAAON,KAAKO,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,WAAvB,CAAX;AACA;AACAI,eAAOA,KAAKI,GAAL,EAAP;AACA,eAAOJ,IAAP;AACH,KA5CI;AA6CL;AACAK,cAAU,oBAAW;AACjB,YAAIX,OAAO,IAAX;AACA;AACAA,aAAKG,IAAL,CAAUS,YAAV;;AAEA;AACAZ,aAAKG,IAAL,CAAUU,QAAV;;AAEA;AACAb,aAAKO,IAAL,CAAUO,OAAV;AACH,KAxDI;;AA0DLC,UA1DK,kBA0DGC,EA1DH,EA0DO;AACR,YAAIhB,OAAO,IAAX;AACA,YAAGA,KAAKC,OAAL,KAAiBD,KAAKF,UAAzB,EAAqC;AACjCE,iBAAKW,QAAL;AACA;AACH;AACJ;AAhEI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar log = console.log.bind(console)\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角的收集最小间距\r\n        pickRadius: 0,\r\n\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    // 对于重复的节点，可以把他保存成Prefab（预制资源）\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        var that = this\r\n       \r\n        \r\n    },\r\n    getDist: function() {\r\n        var that = this\r\n        // 根据player节点位置来判断\r\n        var playerLocal = that.game.player.getPosition()\r\n        // log(that.game, playerLocal)\r\n        // 返回2点间的坐标\r\n        var dist = that.node.position.sub(playerLocal)  \r\n        // 计算2点间的坐标\r\n        dist = dist.mag()\r\n        return dist\r\n    },\r\n    // 收集星星的函数\r\n    onPicked: function() {\r\n        var that = this\r\n        // 生成一个新的星星\r\n        that.game.spawnNewStar()\r\n\r\n        // 19.1.8加上分数\r\n        that.game.addScore()\r\n\r\n        // 销毁当前的星星\r\n        that.node.destroy()\r\n    },\r\n\r\n    update (dt) {\r\n        var that = this\r\n        if(that.getDist() < that.pickRadius) {\r\n            that.onPicked()\r\n            return \r\n        }\r\n    },\r\n});\r\n"]}