{"version":3,"sources":["Star.js"],"names":["log","console","bind","cc","Class","extends","Component","properties","pickRadius","scoreAudio","default","type","AudioClip","playJumpSound","audioEngine","playEffect","start","that","getDist","playerLocal","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","addScore","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAMC,QAAQD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAV;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;;AAIR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMR,GAAGS;AAFD;;AAKZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBQ,KAHP;AA6BL;;AAEA;;AAEA;;AAEA;AACAC,mBAAe,yBAAY;AACvB;AACAV,WAAGW,WAAH,CAAeC,UAAf,CAA0B,KAAKN,UAA/B,EAA2C,KAA3C;AACH,KAvCI;;AAyCLO,SAzCK,mBAyCI;AACL,YAAIC,OAAO,IAAX;AAGH,KA7CI;;AA8CLC,aAAS,mBAAW;AAChB,YAAID,OAAO,IAAX;AACA;AACA,YAAIE,cAAcF,KAAKG,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAlB;AACA;AACA;AACA,YAAIC,OAAON,KAAKO,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,WAAvB,CAAX;AACA;AACAI,eAAOA,KAAKI,GAAL,EAAP;AACA,eAAOJ,IAAP;AACH,KAxDI;AAyDL;AACAK,cAAU,oBAAW;AACjB,YAAIX,OAAO,IAAX;AACAA,aAAKJ,aAAL;;AAEA;AACAI,aAAKG,IAAL,CAAUS,YAAV;;AAEA;AACAZ,aAAKG,IAAL,CAAUU,QAAV;;AAEA;AACAb,aAAKO,IAAL,CAAUO,OAAV;AACH,KAtEI;;AAwELC,UAxEK,kBAwEGC,EAxEH,EAwEO;AACR,YAAIhB,OAAO,IAAX;AACA,YAAGA,KAAKC,OAAL,KAAiBD,KAAKT,UAAzB,EAAqC;AACjCS,iBAAKW,QAAL;AACA;AACH;;AAEA;AACA,YAAIM,eAAe,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAgB,KAAKf,IAAL,CAAUgB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKb,IAAL,CAAUc,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACJ;AAnFI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar log = console.log.bind(console)\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角的收集最小间距\r\n        pickRadius: 0,\r\n\r\n        // 跳跃音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    // 对于重复的节点，可以把他保存成Prefab（预制资源）\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // 播放音效\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    start () {\r\n        var that = this\r\n       \r\n        \r\n    },\r\n    getDist: function() {\r\n        var that = this\r\n        // 根据player节点位置来判断\r\n        var playerLocal = that.game.player.getPosition()\r\n        // log(that.game, playerLocal)\r\n        // 返回2点间的坐标\r\n        var dist = that.node.position.sub(playerLocal)  \r\n        // 计算2点间的坐标\r\n        dist = dist.mag()\r\n        return dist\r\n    },\r\n    // 收集星星的函数\r\n    onPicked: function() {\r\n        var that = this\r\n        that.playJumpSound()\r\n\r\n        // 生成一个新的星星\r\n        that.game.spawnNewStar()\r\n\r\n        // 19.1.8加上分数\r\n        that.game.addScore()\r\n\r\n        // 销毁当前的星星\r\n        that.node.destroy()\r\n    },\r\n\r\n    update (dt) {\r\n        var that = this\r\n        if(that.getDist() < that.pickRadius) {\r\n            that.onPicked()\r\n            return \r\n        }\r\n\r\n         // 根据 Game 脚本中的计时器更新星星的透明度\r\n         var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n         var minOpacity = 50;\r\n         this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n});\r\n"]}